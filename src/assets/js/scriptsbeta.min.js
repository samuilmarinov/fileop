var materialvalue;

var printervalue;

(function($) {

                // $.ajax({
                //     type: 'GET',
                //     url: 'https://3dhr.eu.ngrok.io/files',
                //     data: false,
                //     processData: false,
                //     contentType: false,
                //     mode: 'cors',
                //     cache: false,
                //     crossDomain: true,
                //     timeout: 600000,
                //     success: function(data, status) {

                //         jsonNames = [];
                //         jsonObj = [];

                //         $.each(data, function(name, value) {
                //             item = {}
                //             item["title"] = name;
                //             item["priority"] = data[name]['priority'];
                //             item["copies"] = data[name]['copies'];
                //             item["printed"] = data[name]['printed'];
                //             item["filament"] = data[name]['filament'];
                //             jsonNames.push(name);
                //             jsonObj.push(item);
                //         });

                //         window.localStorage.setItem('printqueue', jsonNames);
                //         var data = jsonObj;
                  
                //     },
                //     error: function(e) {
                       
                //     }
                // });
	
    // $('#gridboxes').easyPaginate({
    //     paginateElement: 'div',
    //     elementsPerPage: 3,
    //     effect: 'climb'
    // });

    // $('#gridboxes').paginate({itemsPerPage: 3});

})( jQuery );


function getval(sel)
{
    // console.log(sel.value);
    materialvalue = sel.value;
}

function getvalprinter(sel) {
  
    printervalue = sel.value;

}

if (window.FileReader) {
    var drop;
    var fileNumber = 0;
    addEventHandler(window, 'load', function() {
        drop = document.getElementById('drop1');

        function cancel(e) {
            if (e.preventDefault) {
                e.preventDefault();
            }
            return false;
        }

        // Tells the browser that we *can* drop on this target
        addEventHandler(drop, 'dragover', function(e) {
            e = e || window.event; // get window.event if e argument missing (in IE) 
            if (e.preventDefault) {
                e.preventDefault();
            }
            fileNumber = fileNumber + 1;
            $(".container").css("opacity", '0.3');
            $("#uploadicon").css("display", "block");

            return false;
        });
        // Tells the browser that we *can* drop on this target
        addEventHandler(drop, 'dragleave', function(e) {
            e = e || window.event; // get window.event if e argument missing (in IE) 
            if (e.preventDefault) {
                e.preventDefault();
            }
            fileNumber = fileNumber + 1;
            $(".container").css("opacity", '1');
            $("#uploadicon").css("display", "none");

            return false;
        });

        addEventHandler(drop, 'dragenter', cancel);


        addEventHandler(drop, 'drop', function(e) {
            e = e || window.event; // get window.event if e argument missing (in IE)   
            if (e.preventDefault) {
                e.preventDefault();
            } // stops the browser from redirecting off to the image.

            var dt = e.dataTransfer;
            var files = dt.files;
            for (var i = 0; i < files.length; i++) {
                var file = files[i];
                var reader = new FileReader();

                //attach event handlers here...  
                reader.readAsDataURL(file);

                addEventHandler(reader, 'loadend', function(e, file) {
                    var bin = this.result;
                    // console.log(file.name);
                    var formData = new FormData();
                    formData.append('file', file);
                    var filename = file.name;
                    // var filename = $('#f').val().replace(/C:\\fakepath\\/i, '');
                    // $("#result").text("");
                    $("#loading-bar-spinner").css("display", "block");
                    //get all form data 
                    const storedarray = window.localStorage.getItem('printqueue');
                    // console.log("STORED ARRAY");
                    // console.log(storedarray);
                    var namesarraystored = storedarray.split(",");
                    // console.log(namesarraystored);
                    var indexfound = namesarraystored.indexOf(filename);
                    // console.log("INDEX");
                    // console.log(indexfound);
                    var first = namesarraystored[0];

                    var filename = $.trim(filename).toString();
                    var first = $.trim(first).toString();
                    var trigger = 0;
                    // console.log("FIRST " + first);
                    // console.log("FILENAME " + filename);
                    var ext = filename.split('.')[1].toLowerCase();;
                    // console.log(ext);
                    var msgtext = "File already in queue!";
                    if (ext != "gcode") {
                        var trigger = 1;
                        var msgtext = "FIle ext. not accepted, needs to be *.gcode !!";

                    }

                    if (filename == first) {
                        var trigger = 1;
                        // console.log("MATCH");
                        var msgtext = "File already in queue!";
                    }

                    if (indexfound > 0 || trigger == 1) {
                        toastr.error(msgtext);
                        $("#data").trigger("reset");
                        $("#loading-bar-spinner").css("display", "none");
                        $("#drop1").css("background-color", 'white');
                        $(".container").css("opacity", '1');
                        $("#uploadicon").css("display", "none");
                    } else {


                        var confirmation = $.confirm({
                        icon: 'fa fa-info',
                        title: 'INPUT COPIES AND PRIORITY',
                        confirmButton: 'Go ahead',
                        cancelButton: 'Cancel',
                        content: '<label for="">Priority</label> <input id="prinputpopup" class="input-number" type="number" name="priority" data-value="" value="" min="0" max="9" data-min="0" data-max="9"> <br> <label for="">Copies</label> <input style="margin-top:10px;" id="copiputpopup" class="input-number" type="number" name="copies" data-value="" min="1" max="1000" data-min="1" data-max="1000"> <select onchange="getval(this);" style="margin-top:10px; display:block;" name="filament" id="filament"> <option value="">-- select filament --</option> <option value="ABS">ABS</option> <option value="PLA">PLA</option> </select> <select onchange="getvalprinter(this);" style="margin-top:10px; display:block;" name="filament" id="filament"> <option value="">-- select printer --</option> <option value="Voron">Voron</option> <option value="PrusaI3">PrusaI3</option> </select>',
                        buttons: {
                            confirm: function() {
                            var priority = $('#prinputpopup').val();
                            var copies = $('#copiputpopup').val();
                            var filament = $('#filament').val();
                            // console.log(priority);
                            // console.log(copies);
                            var url = "https://3dhr.eu.ngrok.io/files/upload/?priority=" + priority + "&copies=" + copies + "&filament=" + materialvalue + "&printer=" + printervalue;
                                $.ajax({
                                    type: 'POST',
                                    enctype: 'multipart/form-data',
                                    url: url,
                                    data: formData,
                                    processData: false,
                                    contentType: false,
                                    mode: 'cors',
                                    cache: false,
                                    crossDomain: true,
                                    timeout: 600000,
                                    success: function(returndata) {
                                        var error = returndata['Error'];
                                        var upload_status = returndata['Upload status'];
                                        if (error) {
                                            toastr.error(error);
                                        } else {
                                            if (upload_status == null){ upload_status = "Uploaded !"}
                                            toastr.success(upload_status);
                                            $("#data").trigger("reset");
                                            $("#loading-bar-spinner").css("display", "none");
                                            $("#drop1").css("background-color", 'white');
                                            $(".container").css("opacity", '1');
                                            $("#uploadicon").css("display", "none");
                                            // var datatablenew = getTabledata(filename);
                                            // console.log(datatablenew);
                                            setTimeout(
                                                function() {
                                                    // console.log(datatablenew[0]);
                                                    // console.log(datatablenew[1]);
                                                    // $('#table').DataTable().row.add( {
                                                    // "title":       filename,
                                                    // "priority":   datatablenew[0],
                                                    // "copies":     datatablenew[1]
                                                    // }).draw(false);
                                                    namesarraystored.push(filename);
                                                    window.localStorage.setItem('printqueue', namesarraystored);

                                                }, 250);
                                            $('#reloadtable').click();
                                            // $('#table').DataTable().ajax.reload(null, false);

                                        }
                                    },
                                    error: function(e) {
                                        toastr.error("Connection Error");
                                        $("#data").trigger("reset");
                                        // console.log(e);
                                    }
                                });

                            },
                            cancel: function() {
                                // $.alert('Canceled!');
                                $("#uploadicon").css("display", "none");
                                $("#loading-bar-spinner").css("display", "none");
                                $(".container").css("opacity", "1");

                            }
                        }
                    });


                    }

                }.bindToEventHandler(file));
            }
            return false;
        });


        Function.prototype.bindToEventHandler = function bindToEventHandler() {
            var handler = this;
            var boundParameters = Array.prototype.slice.call(arguments);
            //create closure
            return function(e) {
                e = e || window.event; // get window.event if e argument missing (in IE)   
                boundParameters.unshift(e);
                handler.apply(this, boundParameters);
            }
        };
    });
} else {
    // document.getElementById('status').innerHTML = 'Your browser does not support the HTML5.';
}

function addFile(evt) {
    e = e || window.event; // get window.event if e argument missing (in IE)   
    if (e.preventDefault) {
        e.preventDefault();
    } // stops the browser from redirecting off to the image.

    var dt = e.dataTransfer;
    var files = dt.files;
    for (var i = 0; i < files.length; i++) {
        var file = files[i];
        var reader = new FileReader();

        //attach event handlers here...  
        reader.readAsDataURL(file);

        addEventHandler(reader, 'loadend', function(e, file) {
            var bin = this.result;
            // console.log(file.name);
            var formData = new FormData();
            formData.append('file', file);
            var filename = file.name;
            // var filename = $('#f').val().replace(/C:\\fakepath\\/i, '');
            // $("#result").text("");
            $("#loading-bar-spinner").css("display", "block");
            //get all form data  
            const storedarray = window.localStorage.getItem('printqueue');
            // console.log("STORED ARRAY");
            // console.log(storedarray);
            var namesarraystored = storedarray.split(",");
            // console.log(namesarraystored);
            var indexfound = namesarraystored.indexOf(filename);
            // console.log("INDEX");
            // console.log(indexfound);
            var first = namesarraystored[0];

            var filename = $.trim(filename).toString();
            var first = $.trim(first).toString();
            var trigger = 0;
            // console.log("FIRST " + first);
            // console.log("FILENAME " + filename);
            var ext = filename.split('.')[1].toLowerCase();;
            // console.log(ext);
            var msgtext = "Error";
            if (ext != "gcode") {
                var trigger = 1;
                var msgtext = "FIle ext. not accepted, needs to be *.gcode !!";

            }

            if (filename == first) {
                var trigger = 1;
                // console.log("MATCH");
                var msgtext = "File already in queue!";
            }


            if (indexfound > 0 || trigger == 1) {
                toastr.error(msgtext);
                toastr.error("File already in queue!");
                $("#data").trigger("reset");
                $("#loading-bar-spinner").css("display", "none");
                $("#drop1").css("background-color", 'white');
                $(".container").css("opacity", '1');
                $("#uploadicon").css("display", "none");
            } else {

                // var formData = new FormData($("form#data")[0]);
                var url = "https://3dhr.eu.ngrok.io/files/upload/?priority=0&copies=1&printer=Voron";
                $.ajax({
                    type: 'POST',
                    enctype: 'multipart/form-data',
                    url: url,
                    data: formData,
                    processData: false,
                    contentType: false,
                    mode: 'cors',
                    cache: false,
                    crossDomain: true,
                    timeout: 600000,
                    success: function(returndata) {
                        var error = returndata['Error'];
                        var upload_status = returndata['Upload status'];
                        if (error) {
                            toastr.error(error);
                        } else {
                            if (upload_status == null){ upload_status = "Uploaded !"}
                            toastr.success(upload_status);
                            $("#data").trigger("reset");
                            $("#loading-bar-spinner").css("display", "none");
                            $("#drop1").css("background-color", 'white');
                            $(".container").css("opacity", '1');
                            $("#uploadicon").css("display", "none");
                            // var datatablenew = getTabledata(filename);
                            // console.log(datatablenew);
                            setTimeout(
                                function() {
                                    // console.log(datatablenew[0]);
                                    // console.log(datatablenew[1]);
                                    // $('#table').DataTable().row.add( {
                                    // "title":       filename,
                                    // "priority":   datatablenew[0],
                                    // "copies":     datatablenew[1]
                                    // }).draw(false);
                                    namesarraystored.push(filename);
                                    window.localStorage.setItem('printqueue', namesarraystored);
                                }, 250);
                            $('#table').DataTable().ajax.reload(null, false);

                        }
                    },
                    error: function(e) {
                        toastr.error("Connection Error");
                        $("#data").trigger("reset");
                        // console.log(e);
                    }
                });
            }


        }.bindToEventHandler(file));
    }
    return false;
}

//seperate event
function addEventHandler(obj, evt, handler) {
    if(obj){
        if (obj.addEventListener) {
            // W3C method
            obj.addEventListener(evt, handler, false);
        } else if (obj.attachEvent) {
            // IE method.
            obj.attachEvent('on' + evt, handler);
        } else {
            // Old school method.
            obj['on' + evt] = handler;
        }
    }
}





$("#file").change(function() {
    //disable the default form action
    event.preventDefault();

    var confirmation = $.confirm({
        icon: 'fa fa-info',
        title: 'INPUT COPIES AND PRIORITY',
        confirmButton: 'Go ahead',
        cancelButton: 'Cancel',
        content: '<label for="">Priority</label> <input id="prinputpopup" class="input-number" type="number" name="priority" data-value="" value="" min="0" max="9" data-min="0" data-max="9"> <br> <label for="">Copies</label> <input style="margin-top:10px;" id="copiputpopup" class="input-number" type="number" name="copies" data-value="" min="1" max="1000" data-min="1" data-max="1000"> <select onchange="getval(this);" style="margin-top:10px; display:block;" name="filament" id="filament"> <option value="">-- select filament --</option> <option value="ABS">ABS</option> <option value="PLA">PLA</option> <option value="PETG">PETG</option> </select> <select onchange="getvalprinter(this);" style="margin-top:10px; display:block;" name="filament" id="filament"> <option value="">-- select printer --</option> <option value="Voron">Voron</option> <option value="PrusaI3">PrusaI3</option> </select>',
        buttons: {
            confirm: function() {
            var priority = $('#prinputpopup').val();
            var copies = $('#copiputpopup').val();
            var filament = $('#filament').val();
            // var filament = $('#filament').find(":selected").text();
            // console.log(priority);
            // console.log(copies);
            // console.log(priority);
            // console.log(copies);
            var filename = $('#file').val().replace(/C:\\fakepath\\/i, '');
            // $("#result").text("");
            $("#loading-bar-spinner").css("display", "block");
            const storedarray = window.localStorage.getItem('printqueue');
            // console.log("STORED ARRAY");
            // console.log(storedarray);
            var namesarraystored = storedarray.split(",");
            // console.log(namesarraystored);
            var indexfound = namesarraystored.indexOf(filename);
            // console.log("INDEX");
            // console.log(indexfound);
            var first = namesarraystored[0];
            var filename = $.trim(filename).toString();
            var first = $.trim(first).toString();
            var trigger = 0;
            // console.log("FIRST " + first);
            // console.log("FILENAME " + filename);

            if (filename == first) {
                var trigger = 1;
                // console.log("MATCH");
            }


            if (indexfound > 0 || trigger == 1) {
                toastr.error("File already in queue!");
                $("#data").trigger("reset");
                $("#loading-bar-spinner").css("display", "none");
            } else {

                //get all form data  
                var formData = new FormData($("form#data")[0]);
                var url = "https://3dhr.eu.ngrok.io/files/upload/?priority=" + priority + "&copies=" + copies + "&filament=" + materialvalue + "&printer=" + printervalue;

                $.ajax({
                    type: 'POST',
                    enctype: 'multipart/form-data',
                    url: url,
                    data: formData,
                    processData: false,
                    contentType: false,
                    mode: 'cors',
                    cache: false,
                    crossDomain: true,
                    timeout: 600000,
                    success: function(returndata) {
                        var error = returndata['Error'];
                        var upload_status = returndata['Upload status'];
                        if (error) {
                            toastr.error(error);
                        } else {
                            if (upload_status == null){ upload_status = "Uploaded !"}
                            toastr.success(upload_status);
                            $("#data").trigger("reset");
                            $("#loading-bar-spinner").css("display", "none");
                            fileList = [];
                            // var datatablenew = getTabledata(filename);
                            // console.log(datatablenew);
                            setTimeout(
                                function() {
                                    // $('#table').DataTable().row.add( {
                                    // "title":       filename,
                                    // "priority":   datatablenew[0],
                                    // "copies":     datatablenew[1]
                                    // }).draw(false);
                                    namesarraystored.push(filename);
                                    window.localStorage.setItem('printqueue', namesarraystored);
                                }, 250);
                            $('#table').DataTable().ajax.reload(null, false);
                            confirmation.close();

                        }
                    },
                    error: function(e) {
                        toastr.error("Connection Error");
                        $("#data").trigger("reset");
                        // console.log(e);
                    }
                });

                return false;
            }

                },
            cancel: function() {
                // $.alert('Canceled!');
            }
        }
    });


});